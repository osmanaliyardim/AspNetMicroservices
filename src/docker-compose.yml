version: '3.4'

services:
  catalogdb:
    image: mongo

  mongoclient:
    image: mongoclient/mongoclient

  basketdb:
    image: redis:alpine

  discountdb:
    image: postgres
   
  pgadmin:
    image: dpage/pgadmin4

  orderdb:
    image: mcr.microsoft.com/mssql/server:2017-latest

  identityserverdb:
    image: mysql

  phpmyadmin:
    image: phpmyadmin

  portainer:
    image: portainer/portainer-ce

  rabbitmq:
    image: rabbitmq:3-management-alpine

  catalog.api:
    image: ${DOCKER_REGISTRY-}catalogapi
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.API/Dockerfile

  basket.api:
    image: ${DOCKER_REGISTRY-}basketapi
    build:
      context: .
      dockerfile: Services/Basket/Basket.API/Dockerfile

  discount.api:
    image: ${DOCKER_REGISTRY-}discountapi
    build:
      context: .
      dockerfile: Services/Discount/Discount.API/Dockerfile

  discount.grpc:
    image: ${DOCKER_REGISTRY-}discountgrpc
    build:
      context: .
      dockerfile: Services/Discount/Discount.Grpc/Dockerfile

  order.api:
    image: ${DOCKER_REGISTRY-}orderapi
    build:
      context: .
      dockerfile: Services/Order/Order.API/Dockerfile

  ocelotapigateway:
    image: ${DOCKER_REGISTRY-}ocelotapigateway
    build:
      context: .
      dockerfile: ApiGateways/OcelotApiGateway/Dockerfile

  shopping.aggregator:
    image: ${DOCKER_REGISTRY-}shoppingaggregator
    build:
      context: .
      dockerfile: ApiGateways/Shopping.Aggregator/Dockerfile

  aspnetrunbasics:
    image: ${DOCKER_REGISTRY-}aspnetrunbasics
    build:
      context: .
      dockerfile: WebApps/AspnetRunBasics/Dockerfile

  identityserver:
    image: ${DOCKER_REGISTRY-}identityserver
    build:
      context: .
      dockerfile: Services/Identity/IdentityServer/Dockerfile

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2

  kibana:
    image: docker.elastic.co/kibana/kibana:7.9.2

  webstatus:
    image: ${DOCKER_REGISTRY-}webstatus
    build:
      context: .
      dockerfile: WebApps/WebStatus/Dockerfile

volumes:
  mongo_data:
  portainer_data:
  postgres_data:
  pgadmin_data:
  mysql_data:
  elasticsearch-data: